// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String  @id @default(uuid()) 
  name String 
  email String @unique
  password_hash String 
  created_at DateTime @default(now())

  checkIns CheckIn[]

  @@map ("users")
}

model CheckIn {
  id String  @id @default(uuid())
  created_at DateTime @default(now())
  validated_at DateTime?

  user User @relation(fields: [user_id], references: [id])
  user_id String

  gym Gym @relation(fields: [gym_id], references: [id])
  gym_id String

  @@map("check_ins")
}

model Gym {
  id String  @id @default(uuid())
  title String
  description String?
  phone String?
  latitude Decimal
  longitude Decimal

  checkIns CheckIn[]

  @@map("gyms")
}

// 1-1 =>
// One-to-One: Each record in one table is related to at most one record in another table.
// Example: A user can have a unique profile, and each profile belongs to only one user.

// 1-N =>
// One-to-Many: A record in one table can be related to multiple records in another table.
// Example: A user can make multiple check-ins, but each check-in belongs to only one user.

// N-N =>
// Many-to-Many: Multiple records in one table can be related to multiple records in another table.
// Example: A user can attend multiple gyms, and a gym can have multiple users.
